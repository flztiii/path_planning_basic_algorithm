cubic spline是通过三次样条差值的方法来进行路径生成，是一种路径生成方法而不是搜索算法。插值与拟合都是根据一系列散点来得到函数，但是拟合只需要函数在趋势上与散点相同即可，而插值需要函数经过所用散点。因此插值容易出现剧烈抖动现象。为了避免抖动，插值通常是通过分段进行的，即每两个散点之间进行一次差值，为了保证分段之间平滑过度，因此需要高次函数进行插值，这也就是三次样条差值的由来。
假设散点为[(x0, y0), (x1, y1),...,(xn, yn)]共有n+1个，则可以得到n段三次样条函数。其中第i段三次样条表达式为Si(x) = ai + bi * (x - xi) + ci * (x - xi) ^ 2 + di * (x - xi) ^ 3。由于有n个方程，所以存在4n个未知数，需要4n个方程进行求解。4n个方程通过以下方式得到：
1）由于方程Si必须通过散点，因此必定存在Si(xi) = yi，其中i = 0,1,2,...,n-1。由于还存在Sn-1(xn)=yn，所以此处可以得到n+1个方程。
2）由于方程之间端点必须连续，因此必定存在Si(xi+1) = Si+1(xi+1)，其中i = 0,1,2,...,n-2。此处可以得到n-1个方程。
3）由于方程之间端点必须平滑，因此必定纯在端点左右分段函数的一阶导数相同，即dSi/dx=dSi+1/dx，其中i = 0,1,2,...,n-2。此处可以得到n-1个方程。
4）由于方程之间端点必须平滑，因此必定纯在端点左右分段函数的二阶导数相同，即d2Si/dx2 = d2Si+1/dx2，其中i = 0,1,2,...,n-2。此处可以得到n-1个方程。
综上所述可以得到4n-2个方程，另外两个方程可以通过边界条件得到，即函数的左右边界二阶导数为0，这种情况称之为自由边界。通过这4n个方程就可以求解出4n个未知量，最终得到方程组表达式。
在这里，代码并不是直接利用x，y进行插值，而是计算出散点之间的直线路程s，分别做s，x的插值与s，y的差值。